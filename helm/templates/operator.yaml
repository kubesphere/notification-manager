apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: notification-manager-operator
  namespace: {{ include "nm.namespaceOverride" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: {{ include "global.imageRegistry" . }}{{ .Values.operator.containers.proxy.image.repo }}:{{ .Values.operator.containers.proxy.image.tag }}
        imagePullPolicy: {{ .Values.operator.containers.proxy.image.pullPolicy }}
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
        {{- toYaml .Values.operator.containers.proxy.resources | nindent 10 }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        command:
        - /notification-manager-operator
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        {{- if .Values.timezone }}
        - name: TZ
          value: {{ .Values.timezone }}
        {{- end }}
        image: {{ include "global.imageRegistry" . }}{{ .Values.operator.containers.operator.image.repo }}:{{ .Values.operator.containers.operator.image.tag | default (printf "v%s" .Chart.AppVersion) }}
        imagePullPolicy: {{ .Values.operator.containers.operator.image.pullPolicy }}
        name: notification-manager-operator
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        resources:
        {{- toYaml .Values.operator.containers.operator.resources | nindent 10 }}
        volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: notification-manager-webhook-server-cert
      serviceAccount: notification-manager-sa
      serviceAccountName: notification-manager-sa
      nodeSelector:
      {{- include "common.operator.nodeSelectors" . }}
      affinity:
      {{- toYaml .Values.operator.affinity | nindent 8 }}
      tolerations:
      {{- toYaml .Values.operator.tolerations | nindent 8 }}
